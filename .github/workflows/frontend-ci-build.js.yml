# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# If that works, will deploy the frontend to vercel

name: Frontend tests and deploy

on:
  push:
    branches: 
      - "*"

  pull_request:
    paths:
      - "front/**"
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    name: "Static and automated tests"

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Echo to github info
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo github.ref
      - run: echo github.event_name
      # - run: cd front && npm run typecheck
      # - run: cd front && npm run test:run
      # if: "github.ref == 'refs/heads/main' || github.event_name == 'pull_request'"

  deploy:
    runs-on: ubuntu-latest
    if: ${{ contains(join(needs.*.result, ','), 'success') }}
    needs: [tests]
    name: "Vercel deploy (trigger vercel)"
    env:
      # VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      # VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - uses: actions/checkout@v2
      - name: Echo to github info
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo "Hello world"
      # - name: "Copy types"
      #   working-directory: ./front
      #   run: |
      #     mv ../backend/api/src/shared/types ./app/utils/
      #     cp ../backend/api/src/shared/lib.ts ./app/utils/shared-types.ts

      # - name: "Deploy Dev"
      #   if: ${{ github.ref == 'refs/heads/main' }}
      #   run: |
      #     npx vercel --token ${VERCEL_TOKEN} --prod
      #   env:
      #     VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}

      # - name: "Deploy Prod"
      #   if: startsWith( github.ref, 'refs/tags/deploy/')
      #   run: |
      #     npx vercel --token ${VERCEL_TOKEN} --prod
      #   env:
      #     VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID_PROD}}

      # - name: "Deploy Preview"
      #   if: "!startsWith( github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"
      #   run: |
      #     npx vercel --token ${VERCEL_TOKEN}
      #   env:
      #     VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}

      # - name: "Notify slack channel"
      #   if: startsWith( github.ref, 'refs/tags/deploy/')
      #   run: |
      #     curl -X POST -H 'Content-type: application/json' --data '{"text":"Frontend deployed âœ…"}' ${SLACK_WEBHOOK}
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}